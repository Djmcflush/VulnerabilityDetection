from flask import Flask, jsonify, request
import tensorflow as tf
from keras.models import load_model
from download_code import generate_contract, read_code_from_path, batch_generate

app = Flask(__name__)

model = None

@app.route('/get_network', methods=['POST'])
def get_network():
    global model
    data = request.get_json()
    model_path = data['model_path']
    model = load_model(model_path)
    return jsonify({'status': 'model loaded successfully'}), 200

@app.route('/predict', methods=['POST'])
def predict():
    global model
    if model is None:
        return jsonify({'error': 'No model is loaded, use /get_network endpoint to load a model.'}), 400
    data = request.get_json()
    input_data = data['input_data']
    predictions = model.predict(input_data)
    return jsonify({'predictions': predictions.tolist()}), 200

@app.route('/generate_contract', methods=['POST'])
def generate_contract_api():
    data = request.get_json()
    contract = data['contract']
    result = generate_contract(contract)
    return jsonify({'result': result}), 200

@app.route('/batch_generate', methods=['POST'])
def batch_generate_api():
    data = request.get_json()
    contracts = data['contracts']
    output_directory = data.get('output_directory', None)
    nr_of_transactions_to_include = data.get('nr_of_transactions_to_include', 5)
    overwrite = data.get('overwrite', True)
    results = batch_generate(contracts, output_directory, nr_of_transactions_to_include, overwrite)
    return jsonify({'results': results}), 200


@app.route('/read_code', methods=['POST'])
def read_code_api():
    data = request.get_json()
    path = data['path']
    code = read_code_from_path(path)
    return jsonify({'code': code}), 200




if __name__ == '__main__':
    app.run(debug=True)
